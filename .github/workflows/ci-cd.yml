name: 'Inventory-Service CI/CD Pipeline'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }}
          JF_USER: ${{ vars.JFROG_USER }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
          JF_PROJECT: "bookverse"
          JFROG_CLI_BUILD_NAME: ${{ github.event.repository.name }}
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}

      - name: Configure Artifactory for Python
        run: |
          jfrog pipc --repo-resolve=bookverse-pypi

      - name: Install Python dependencies with JFrog CLI
        run: |
          # The build name and number are picked up automatically from the environment variables.
          jfrog pip install -r requirements.txt

      - name: Set Version
        id: set_version
        run: echo "VERSION=1.3.0" >> $GITHUB_ENV # Manually set version for demo

      - name: Login to JFrog Docker Registry
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login ${{ vars.JFROG_URL }} -u "${{ vars.JFROG_USER }}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          IMAGE_TAG="${{ vars.JFROG_URL }}/bookverse-docker-dev/${{ github.event.repository.name }}-backend:${{ env.VERSION }}"
          docker build --pull -t $IMAGE_TAG \
            --build-arg JFROG_URL=${{ vars.JFROG_URL }} \
            --build-arg JFROG_USER=${{ vars.JFROG_USER }} \
            --build-arg JFROG_ACCESS_TOKEN=${{ secrets.JFROG_ACCESS_TOKEN }} \
            -f Dockerfile.backend .
          jfrog rt dp $IMAGE_TAG bookverse-docker-dev

      - name: Build and Push Frontend Image
        run: |
          IMAGE_TAG="${{ vars.JFROG_URL }}/bookverse-docker-dev/${{ github.event.repository.name }}-frontend:${{ env.VERSION }}"
          docker build --pull -t $IMAGE_TAG -f Dockerfile.frontend .
          jfrog rt dp $IMAGE_TAG bookverse-docker-dev

      - name: Collect Git information for Build Info
        run: |
          jfrog rt bag

      - name: Collect Environment Variables for Build Info
        run: |
          jfrog rt bce

      - name: Publish Build Info
        run: |
          jfrog rt bp

      - name: Create Microservice Release Bundle
        run: |
          jfrog rbc ${{ github.event.repository.name }} ${{ env.VERSION }} --spec='{
            "queries": [
              {
                "query": "items.find({\"type\":\"docker\", \"repo\":\"bookverse-docker-dev\", \"@build.name\":\"${{ github.event.repository.name }}\", \"@build.number\":\"${{ github.run_number }}\"})"
              }
            ]
          }' --sign=true
